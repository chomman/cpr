<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">
		
		
		<security:http pattern="/resources/**" security="none" />
		
		<security:global-method-security secured-annotations="enabled" />
		
			 <!-- This is where we configure Spring-Security  -->
			 <security:http auto-config="false" 
			 				use-expressions="true" 
			 				entry-point-ref="authenticationEntryPoint" >
			 
			 <security:remember-me key="zexmurx" services-ref="rememberMeService"/>
			 
		 	 <security:intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
				
			 <security:anonymous />
			  
			  <security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER"/>
			  <security:custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER"/>
			  <security:custom-filter ref="exceptionTranslationFilter" after="EXCEPTION_TRANSLATION_FILTER" />
			  
			  
		 </security:http>

	  

		<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
		
		<bean id="passwordSaltSource"	class="org.springframework.security.authentication.dao.SystemWideSaltSource">
			<property name="systemWideSalt" value="gohaxopu" />
		</bean>

		<bean id="customUserDetailsService" class="sk.peterjurkovic.cpr.spring.security.HibernateAuthenticationImpl"/>
		
		<bean id="customAuthenticationManager" class="sk.peterjurkovic.cpr.spring.security.AuthenticationManagerImpl" />
		  
		<bean id="authenticationFailureHandler" class="sk.peterjurkovic.cpr.spring.security.CustomUrlAuthenticationFailureHandler" />
	
		<bean id="authenticationSuccessHandler" class="sk.peterjurkovic.cpr.spring.security.CustomUrlAuthenticationSuccessHandler" />
		
		<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
	    	<constructor-arg value="/"/>
	    	<constructor-arg>
	      		<list>
	            	<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
	            	<ref bean="logoutListener"/>
	            	<ref bean="rememberMeService"/>
	        	</list>
	    	</constructor-arg>
	    	<property name="filterProcessesUrl" value="/j_logout"/>
		</bean>
		
		<bean id="loginListener" class="sk.peterjurkovic.cpr.listeners.LoginListener" autowire="byName" />
	
		<bean id="logoutListener" class="sk.peterjurkovic.cpr.listeners.LogoutListener" autowire="byName" />
	
		<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
			<property name="accessDeniedHandler" ref="accessDeniedHandler" />
			<constructor-arg>
				<ref bean="authenticationEntryPoint"/>
			</constructor-arg>
		</bean>
	
	
		<bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
			<property name="errorPage" value="/access-denied" />
		</bean>
	
	
		<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
			 <constructor-arg value="/login" />
			<property name="forceHttps" value="false" />
		</bean>
		
		
		<bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
			<property name="authenticationManager" ref="authenticationManager" />
			<property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
			<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
			<property name="rememberMeServices" ref="rememberMeService" />
			<property name="filterProcessesUrl" value="/j_spring_security_check" />
		</bean>
		
		
		<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
			 <constructor-arg>
		         <util:list>
					<ref local="daoAuthenticationProvider" />
					<ref local="anonymousAuthenticationProvider" />
					<ref local="rememberMeAuthenticationProvider" /> 
		         </util:list>
		     </constructor-arg>
		     <property name="authenticationEventPublisher">
				<bean class="org.springframework.security.authentication.DefaultAuthenticationEventPublisher" />
			 </property>	
		</bean>	
		
		
		<bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		  <constructor-arg value="anonyms_unique_key"/>
		</bean>
		
		
		<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
			<property name="userDetailsService"	ref="customUserDetailsService" /> 
	 		<property name="saltSource" ref="passwordSaltSource" /> 
	 		<property name="passwordEncoder" ref="passwordEncoder" />
		</bean>
		
		
		<!--  Remember me konfiguracia -->
		
		<bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		  <constructor-arg ref="authenticationManager" />
		  <constructor-arg ref="rememberMeService" />		
		</bean>
		        
		<bean id="rememberMeService" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		  <constructor-arg value="zexmurx" />
		  <constructor-arg ref="customUserDetailsService" /> 
		  <property name="alwaysRemember" value="true" />
		</bean>
		        
		<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		  <constructor-arg value="zexmurx" />
		</bean>
		
		<security:authentication-manager />

</beans>