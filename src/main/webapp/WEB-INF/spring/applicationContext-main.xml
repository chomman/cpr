<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:util="http://www.springframework.org/schema/util"
     xmlns:mvc="http://www.springframework.org/schema/mvc"
     xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
     default-autowire="byName"
     >
	<util:properties id="config" location="classpath:config.properties"/>
	
	<mvc:annotation-driven conversion-service="conversionService" />

	<mvc:annotation-driven validator="validator" />
		
	<bean name="validator"   class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
	    <property name="validationMessageSource" ref="messageSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManagerBean"/>

    <context:component-scan base-package="sk.peterjurkovic.cpr.dao">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
    
    <context:component-scan base-package="sk.peterjurkovic.cpr.services">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>  
    
    <context:component-scan base-package="sk.peterjurkovic.cpr.validators">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>
    
    <context:component-scan base-package="sk.peterjurkovic.cpr.mail">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>      
    
    <context:component-scan base-package="sk.peterjurkovic.cpr.web">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan> 
    
    <context:component-scan base-package="sk.peterjurkovic.cpr.parser">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan> 
    
    <context:component-scan base-package="sk.peterjurkovic.cpr.csvimport">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan> 

   
   <!-- Konverzia objektov  -->
	  <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	    <property name="converters">
	      <set>
	        <ref bean="countryConverter" />
	      </set>
	    </property>
	  </bean>

	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
              <value>classpath:config.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>
    
	
	 <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
        <property name="defaultLocale" value="cs"/>
    </bean>
    
    
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
    	<property name="paramName" value="lang" />
	</bean>
	
	
	<bean name="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    	<property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
    	<property name="defaultEncoding" value="UTF-8" /> 
	</bean>
	
	 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
	                <property name="objectMapper" ref="jacksonObjectMapper" />
	            </bean>
	        </list>
	    </property>
	</bean>
	<bean id="jacksonObjectMapper" class="sk.peterjurkovic.cpr.web.json.DateTimeMapper" />
	<bean id="jacksonSerializationConfig" class="org.codehaus.jackson.map.SerializationConfig"
	    factory-bean="jacksonObjectMapper" factory-method="getSerializationConfig" />
	<bean
	    class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="targetObject" ref="jacksonSerializationConfig" />
	    <property name="targetMethod" value="setSerializationInclusion" />
	    <property name="arguments">
	        <list>
	            <value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_DEFAULT</value>
	        </list>
	    </property>
	</bean>
	 
	
	 
	<!-- freemarker -->
    <bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
	  <property name="templateLoaderPath" value="/WEB-INF/templates/"/>
	  <property name="freemarkerSettings">
        <props>
            <prop key="auto_import">spring.ftl as spring</prop>
        </props>
   	  </property>
    </bean>
       
    <bean id="pdfView" scope="request" class="sk.peterjurkovic.cpr.export.PdfByXhtmlrendererView" />

    <bean id="pdfByXhtmlrendererExporter" scope="singleton" class="sk.peterjurkovic.cpr.export.PdfExporter">
        <property name="fonts">
        	<list>
        		<value>/fonts/tahoma.ttf</value>
        	</list>
        </property>
        <property name="freeMarkerConfigurer" ref="freeMarkerConfigurer" />
    </bean>
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	  <property name="cache" value="true"/>
	  <property name="prefix" value=""/>
	  <property name="suffix" value=".ftl"/>
	  <property name="exposeSpringMacroHelpers" value="true"/>
	</bean>
	
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
    	<property name="maxUploadSize" value="6000000"/>
    </bean>    
	 
</beans>
